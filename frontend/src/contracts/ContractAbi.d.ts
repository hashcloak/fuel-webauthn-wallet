/* Autogenerated file. Do not edit manually. */

/* tslint:disable */
/* eslint-disable */

/*
  Fuels version: 0.44.1
  Forc version: 0.35.5
  Fuel-Core version: 0.17.3
*/

import type {
  BigNumberish,
  BN,
  BytesLike,
  Contract,
  DecodedValue,
  FunctionFragment,
  Interface,
  InvokeFunction,
} from 'fuels';

export type AffinePointInput = { x: FieldElementInput, y: FieldElementInput, infinity: BigNumberish };
export type AffinePointOutput = { x: FieldElementOutput, y: FieldElementOutput, infinity: number };
export type FieldElementInput = { ls: [BigNumberish, BigNumberish, BigNumberish, BigNumberish] };
export type FieldElementOutput = { ls: [BN, BN, BN, BN] };
export type PublicKeyInput = { point: AffinePointInput };
export type PublicKeyOutput = { point: AffinePointOutput };
export type ScalarInput = { ls: [BigNumberish, BigNumberish, BigNumberish, BigNumberish] };
export type ScalarOutput = { ls: [BN, BN, BN, BN] };
export type SignatureInput = { r: ScalarInput, s: ScalarInput };
export type SignatureOutput = { r: ScalarOutput, s: ScalarOutput };

interface ContractAbiInterface extends Interface {
  functions: {
    verify_signature: FunctionFragment;
  };

  encodeFunctionData(functionFragment: 'verify_signature', values: [PublicKeyInput, SignatureInput, string]): Uint8Array;

  decodeFunctionData(functionFragment: 'verify_signature', data: BytesLike): DecodedValue;
}

export class ContractAbi extends Contract {
  interface: ContractAbiInterface;
  functions: {
    verify_signature: InvokeFunction<[pubkey: PublicKeyInput, sign: SignatureInput, msg: string], boolean>;
  };
}
